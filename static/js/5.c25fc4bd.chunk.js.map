{"version":3,"sources":["components/sections/Projects/projects.module.css","components/sections/Projects/ProjectItem.js","components/sections/Projects/index.js"],"names":["module","exports","ProjectItem","project","href","url","target","rel","className","styles","projectInfo","name","description","desc","Projects","useState","repos","setRepos","slicer","setSlicer","useEffect","a","axios","get","then","res","data","tempData","push","id","stargazers_count","html_url","orderedArr","sort","b","map","console","error","localStorage","getItem","storeRepos","JSON","parse","fetchData","setItem","stringify","projectList","length","slice","seeMore","onClick","style","verticalAlign"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,YAAc,8BAA8B,QAAU,0BAA0B,QAAU,4B,oICc7FC,EAbK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACI,mBAAGC,KAAMD,EAAQE,IAAKC,OAAO,SAASC,IAAI,aAAaC,UAAWC,IAAON,QAAzE,SACI,sBAAKK,UAAWC,IAAOC,YAAvB,UACI,6BAAKP,EAAQQ,OACb,qBAAKH,UAAWC,IAAOG,YAAvB,SACKT,EAAQU,a,QC8DdC,UA/DE,WAEb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KA+CA,OA3CAC,qBAAU,WAAM,4CAEZ,gCAAAC,EAAA,+EAE0BC,IAAMC,IAAI,iDAAiDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAFrG,cAEcD,EAFd,QAIcE,EAJd,YAI6BF,IACZG,KAAK,CAAEC,GAAI,EAAGC,iBAAkB,IAAKnB,KAAM,iBAAkBoB,SAAU,yBAA0BnB,YAAa,sDAEjHoB,EAAaL,EAASM,MAAK,SAACZ,EAAGa,GACjC,OAAIb,EAAES,iBAAmBI,EAAEJ,kBACf,EAED,KAXvB,kBAeeE,EAAWG,KAAI,SAAAT,GAClB,MAAO,CACHG,GAAIH,EAAKG,GACTlB,KAAMe,EAAKf,KACXN,IAAKqB,EAAKK,SACVlB,KAAMa,EAAKd,iBApB3B,kCAwBQwB,QAAQC,MAAM,2CAxBtB,2DAFY,sBA+BZ,GAAIC,aAAaC,QAAQ,SAAU,CAC/B,IAAMC,EAAaC,KAAKC,MAAMJ,aAAaC,QAAQ,UACnDtB,EAASuB,QAjCA,WAAD,gCAmCRG,GAAYnB,MAAK,SAAAR,GACbsB,aAAaM,QAAQ,QAASH,KAAKI,UAAU7B,IAC7CC,EAASD,QAIlB,IAGC,0BAASa,GAAG,WAAZ,UACI,4CACA,qBAAKrB,UAAWC,IAAOqC,YAAvB,SACK9B,GAASA,EAAM+B,OAAS,GAAK/B,EAAMgC,MAAM,EAAG9B,GAAQiB,KAAI,SAAAhC,GAAO,OAC5D,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQ0B,SAGjCX,EAASF,EAAM+B,QAAU,yBAAQvC,UAAWC,IAAOwC,QAASC,QArDrD,kBAAM/B,EAAUD,EAAS,IAqDP,sBAA8D,cAAC,IAAD,CAAoBiC,MAAO,CAAEC,cAAe","file":"static/js/5.c25fc4bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectList\":\"projects_projectList__otvVh\",\"project\":\"projects_project__2wSEb\",\"seeMore\":\"projects_seeMore__85N-R\"};","import styles from './projects.module.css'\r\n\r\nconst ProjectItem = ({ project }) => {\r\n    return (\r\n        <a href={project.url} target=\"_blank\" rel=\"noreferrer\" className={styles.project}>\r\n            <div className={styles.projectInfo}>\r\n                <h3>{project.name}</h3>\r\n                <div className={styles.description}>\r\n                    {project.desc}\r\n                </div>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default ProjectItem\r\n","import { useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\nimport ProjectItem from \"./ProjectItem\";\r\nimport { AiOutlineCaretDown } from 'react-icons/ai'\r\n\r\nimport styles from './projects.module.css'\r\n\r\nconst Projects = () => {\r\n\r\n    const [repos, setRepos] = useState([]);\r\n    const [slicer, setSlicer] = useState(6);\r\n\r\n    const seeMore = () => setSlicer(slicer + 6);\r\n\r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n            try {\r\n                const res = await axios.get(\"https://api.github.com/users/AykutSarac/repos\").then(res => res.data);\r\n\r\n                const tempData = [...res];\r\n                tempData.push({ id: 1, stargazers_count: 999, name: 'Growtopian Bot', html_url: 'https://growtopian.xyz', description: 'Growtopian is a Discord bot with various features' })\r\n\r\n                const orderedArr = tempData.sort((a, b) => {\r\n                    if (a.stargazers_count > b.stargazers_count) {\r\n                        return -1\r\n                    } else {\r\n                        return 1\r\n                    }\r\n                })\r\n\r\n                return orderedArr.map(data => {\r\n                    return {\r\n                        id: data.id,\r\n                        name: data.name,\r\n                        url: data.html_url,\r\n                        desc: data.description\r\n                    }\r\n                })\r\n            } catch (error) {\r\n                console.error('An error occured while fetching data...');\r\n            }\r\n\r\n        }\r\n\r\n        if (localStorage.getItem('repos')) {\r\n            const storeRepos = JSON.parse(localStorage.getItem('repos'));\r\n            setRepos(storeRepos);\r\n        } else {\r\n            fetchData().then(repos => {\r\n                localStorage.setItem('repos', JSON.stringify(repos));\r\n                setRepos(repos);\r\n            });\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <section id=\"projects\">\r\n            <h1>$ Projects</h1>\r\n            <div className={styles.projectList}>\r\n                {repos && repos.length > 0 && repos.slice(0, slicer).map(project => (\r\n                    <ProjectItem key={project.id} project={project} />\r\n                ))}\r\n            </div>\r\n            {slicer < repos.length && <button className={styles.seeMore} onClick={seeMore}>See More <AiOutlineCaretDown style={{ verticalAlign: 'middle' }} /></button>}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n"],"sourceRoot":""}